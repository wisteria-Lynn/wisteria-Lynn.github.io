
// 10.167.13.10/IDPS/

/d/"Program Files"/nginx-1.12.0/html/ImageDataProject


本地提交：
git add [name]

例如提交所有修改文件：git add *
 
提交到本地仓库
git commit -m "这里写备注"
 
推送到远程仓库流程：
1、先从远程仓库拉去最新代码：
git fetch
 
2、再合并本地代码
git rebase [分支名称，可省略]
 
3、如果提示合并有冲突：使用以下命令查看
git diff
 
4、然后再将本地提交推送到远程仓库
git push


初始化：

git init

查看日志：

$ git log

推送所有文件到远端：

git push -u origin master

回退之前某一个版本：

$ git reset --hard 2682749

回退上一个版本：

$ git reset --hard HEAD^



创建一个新的分支并切换：

$ git checkout -b dev

创建新分支、切换分支：

$ git branch dev
$ git checkout dev

查看分支：

$ git branch

新建分支并切换到该分支：

$ git checkout -b dev

切换分支：
$ git checkout dev

合并分支：

$ git checkout master
$ git merge dev

禁用fast forward

$ git merge --no-ff -m "合并分支" dev

删除分支：

$ git branch -d dev


储藏工作

$ git stash 或者 git stash save

查看隐藏工作

$ git stash list
stash@{0}: WIP on master: 049d078 added the index file
stash@{1}: WIP on master: c264051 Revert "added file_size"
stash@{2}: WIP on master: 21d80a5 added number to log

恢复隐藏工作

$ git stash apply 默认恢复最近一个
$ git stash apply stash@{2}

移除隐藏

$ git stash drop stash@{0}

恢复后并移除

$ git stash pop stash@{0}


多人协作的工作模式是这样的：

首先，可以试图用git push origin branch-name推送自己的修改；
如果推送失败，则因为远程分支比你本地的更新，需要先用git pull试图合并；
如果合并有冲突，则解决冲突，并在本地提交；
没有冲突或者解决掉冲突后，再用git push origin branch-name推送就能成功。
如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用

命令 git branch --set-upsream branch-name origin/branch-name

补打标签+附注：

$ git tag -a v1.2 9fceb02 -m "发布新版本"

分享标签：

git push origin 标签名

-r 就是向下递归，不管有多少级目录，一并删除
-f 就是直接强行删除，不作任何提示的意思

删除文件夹实例：
rm -rf /var/log/httpd/access
将会删除/var/log/httpd/access目录以及其下所有文件、文件夹

2
删除文件使用实例：
rm -f /var/log/httpd/access.log
将会强制删除/var/log/httpd/access.log这个文件

恢复被删除的stash
git fsck --unreachable
找到对应的tree，然后git stash apply




